import { PartnerSolutionType } from '@/types/partners'
import { clsx, type ClassValue } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
    return twMerge(clsx(inputs))
}

export const accessToken =
    'eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTEVBRCIsInRva2VuX3R5cGUiOiJhY2Nlc3MiLCJwaG9uZSI6IisyMTI2MTIzNDU2NzgxMTUiLCJlbWFpbCI6ImFtaW5lLnNhYmlyQGV4YW1wbGUuY29tIiwic3ViIjoiYW1pbmUuc2FiaXJAZXhhbXBsZS5jb20iLCJpYXQiOjE3Mjk4MDgwNDIsImV4cCI6MTczMjQwMDA0Mn0.5oMMNpnpBvP5FuDA81h5zJFVKGFAbDdP2UGsGBmmvfPn5-ISJ6MCZkBJqJPVdVL_zQvn3i_S88pyntldVi7lIA'

export const headers = {
    Authorization: 'Bearer ' + accessToken,
}

export const getSolutions = (solutions: string[]) => {
    return solutions.map((solution) => {
        switch (solution) {
            case 'pro_market':
                return PartnerSolutionType.MARKET_PRO
            case 'pro_dlc':
                return PartnerSolutionType.DLC_PRO
            case 'pro_donate':
                return PartnerSolutionType.DONATE_PRO
            default:
                return PartnerSolutionType.NONE
        }
    })
}

export const countryCodes = [
    { value: '+212', flag: 'üá≤üá¶' },
    { value: '+1', flag: 'üá∫üá∏' },
    { value: '+86', flag: 'üá®üá≥' },
    { value: '+91', flag: 'üáÆüá≥' },
    { value: '+81', flag: 'üáØüáµ' },
    { value: '+82', flag: 'üá∞üá∑' },
    { value: '+7', flag: 'üá∑üá∫' },
    { value: '+55', flag: 'üáßüá∑' },
    { value: '+49', flag: 'üá©üá™' },
    { value: '+33', flag: 'üá´üá∑' },
    { value: '+44', flag: 'üá¨üáß' },
    { value: '+61', flag: 'üá¶üá∫' },
    { value: '+52', flag: 'üá≤üáΩ' },
    { value: '+39', flag: 'üáÆüáπ' },
    { value: '+34', flag: 'üá™üá∏' },
    { value: '+234', flag: 'üá≥üá¨' },
    { value: '+20', flag: 'üá™üá¨' },
    { value: '+27', flag: 'üáøüá¶' },
    { value: '+62', flag: 'üáÆüá©' },
    { value: '+84', flag: 'üáªüá≥' },
    { value: '+31', flag: 'üá≥üá±' },
    { value: '+32', flag: 'üáßüá™' },
    { value: '+41', flag: 'üá®üá≠' },
    { value: '+213', flag: 'üá©üáø' },
    { value: '+221', flag: 'üá∏üá≥' },
    { value: '+216', flag: 'üáπüá≥' },
    { value: '+225', flag: 'üá®üáÆ' },
].sort((a, b) => a.value.localeCompare(b.value))

export const PartnerOptions = [
    { id: '0', name: 'All', avatar: 'https://via.placeholder.com/120' },
    { id: '1', name: 'Supermarch√©', avatar: 'https://via.placeholder.com/120' },
    { id: '2', name: 'Superettes', avatar: 'https://via.placeholder.com/120' },
] // Fetch options from API
